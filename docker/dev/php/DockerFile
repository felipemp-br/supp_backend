# pulled from ubuntu
FROM ubuntu:22.04 as base

MAINTAINER Advocacia-Geral da União <supp@agu.gov.br>

# instalacao dos pacotes basicos
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y tzdata && apt-get install -y --allow-unauthenticated \
    ubuntu-release-upgrader-core python3-distupgrade apt-utils supervisor wget vim curl nano git unzip jq apt-transport-https ca-certificates software-properties-common zlib1g-dev libxml2-dev ntp \
    acl graphviz tesseract-ocr-por imagemagick poppler-utils libaio1 ghostscript openjdk-8-jre-headless clamav memcached openssh-client sshpass postgresql-client

RUN DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ondrej/php -y && apt-get update && apt-get install -y --allow-unauthenticated \
    php8.3-memcached php-pear php8.3 php8.3-fpm php8.3-cli php8.3-common php8.3-dev php8.3-ldap \
    php8.3-curl php8.3-soap php8.3-gd php8.3-mbstring php8.3-intl php8.3-xml php8.3-zip \
    php8.3-bcmath php8.3-mysql php8.3-pgsql php8.3-apcu php8.3-amqp php8.3-sqlite3 \
    php8.3-imap php8.3-pcov php8.3-igbinary php8.3-redis php8.3-ssh2 php8.3-xdebug

# caddy
RUN wget https://github.com/caddyserver/caddy/releases/download/v2.7.6/caddy_2.7.6_linux_amd64.deb && \
    dpkg -i caddy_2.7.6_linux_amd64.deb

RUN DEBIAN_FRONTEND=noninteractive apt-get remove apache2

RUN update-alternatives --set php /usr/bin/php8.3;
RUN update-alternatives --set phpize /usr/bin/phpize8.3;
RUN update-alternatives --set php-config /usr/bin/php-config8.3;
RUN update-alternatives --set phar /usr/bin/phar8.3;
RUN update-alternatives --set phar.phar /usr/bin/phar.phar8.3;

# ms fonts
RUN echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends fontconfig ttf-mscorefonts-installer libxrender1 xfonts-75dpi xfonts-base
RUN fc-cache -f -v

# clamav
RUN freshclam

# pdf
COPY docker/wkhtmltopdf/wkhtmltox_0.12.6.1-2.jammy_amd64.deb /tmp
RUN dpkg -i /tmp/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
RUN apt-get install -f -y
RUN ln -s /usr/local/bin/wkhtmltopdf /usr/bin
RUN ln -s /usr/local/bin/wkhtmltoimage /usr/bin

RUN echo "memory_limit=-1" >> /etc/php/8.3/cli/php.ini
RUN echo "max_execution_time=600" >> /etc/php/8.3/cli/php.ini
RUN echo "max_input_time=-1" >> /etc/php/8.3/cli/php.ini
RUN echo "default_socket_timeout=600" >> /etc/php/8.3/cli/php.ini
# RUN echo "xdebug.log_level=0" >> /etc/php/8.3/cli/php.ini
# RUN echo "xdebug.mode=debug,develop" >> /etc/php/8.3/cli/php.ini
# RUN echo "xdebug.idekey=docker" >> /etc/php/8.3/cli/php.ini
# RUN echo "xdebug.remote_handler=dbgp" >> /etc/php/8.3/cli/php.ini
RUN echo "short_open_tag=off" >> /etc/php/8.3/cli/php.ini
RUN echo "date.timezone=America/Sao_Paulo" >> /etc/php/8.3/cli/php.ini
RUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 100M/g' /etc/php/8.3/cli/php.ini
RUN sed -i 's/post_max_size = 8M/post_max_size = 100M/g' /etc/php/8.3/cli/php.ini

RUN echo "memory_limit=-1" >> /etc/php/8.3/fpm/php.ini
RUN echo "max_execution_time=30" >> /etc/php/8.3/fpm/php.ini
RUN echo "max_input_time=30" >> /etc/php/8.3/fpm/php.ini
RUN echo "default_socket_timeout=600" >> /etc/php/8.3/fpm/php.ini
# RUN echo "xdebug.log_level=0" >> /etc/php/8.3/fpm/php.ini
# RUN echo "xdebug.mode=debug,develop" >> /etc/php/8.3/fpm/php.ini
# RUN echo "xdebug.idekey=docker" >> /etc/php/8.3/fpm/php.ini
# RUN echo "xdebug.remote_handler=dbgp" >> /etc/php/8.3/fpm/php.ini
RUN echo "short_open_tag=off" >> /etc/php/8.3/fpm/php.ini
RUN echo "date.timezone=America/Sao_Paulo" >> /etc/php/8.3/fpm/php.ini
RUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 100M/g' /etc/php/8.3/fpm/php.ini
RUN sed -i 's/post_max_size = 8M/post_max_size = 100M/g' /etc/php/8.3/fpm/php.ini

RUN echo "clear_env=no" >> /etc/php/8.3/fpm/php-fpm.conf

# configuracoes
RUN touch /etc/ntp.drift
COPY /docker/dev/php/Caddyfile /etc/caddy/Caddyfile
COPY /docker/dev/php/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY /docker/dev/php/ntp.conf /etc/ntp.conf
COPY /docker/dev/php/crontab.txt /etc/crontab.txt
COPY /docker/java/supp-signer.jar /usr/local/bin/supp-signer.jar
COPY /docker/dev/php/imagemagick-policy.xml /etc/ImageMagick-6/policy.xml

RUN chmod 0644 /etc/crontab.txt

# install composer
RUN curl -sS https://getcomposer.org/installer | php -- --version=2.8.2 --install-dir=/usr/local/bin --filename=composer
RUN chmod +x /usr/local/bin/composer
RUN composer config --global process-timeout 2000

# criação pasta do filesystem:
RUN mkdir -p /filesystem/documentos && chown www-data:www-data /filesystem/documentos

RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

FROM base as dev

WORKDIR /app

EXPOSE 8000

ENTRYPOINT ["sh", "/app/docker/dev/php/docker-entrypoint.sh"]
